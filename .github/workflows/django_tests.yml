name: Django Unit Tests with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Navigate to Docker Compose directory and set up Docker Compose
    - name: Start PostgreSQL using Docker Compose
      run: |
        cd db
        docker-compose up -d db  # Start only the PostgreSQL container

    # Step 3: Wait for the database to be ready
    - name: Wait for PostgreSQL to be ready
      run: |
        until docker exec postgres_db pg_isready -U django_user -d django_db; do
          echo "Waiting for PostgreSQL...";
          sleep 2;
        done

    # Step 4: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # Step 5: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 6: Run database migrations
    - name: Run database migrations
      run: |
        python manage.py migrate sessions

    # Step 7: Run tests
    - name: Run Django tests
      env:
        DATABASE_URL: postgres://django_user:django_password@localhost:5432/django_db
      run: |
        python manage.py test

    # Step 8: Tear down Docker Compose
    - name: Tear down Docker Compose
      if: always()  # Ensures this step runs even if previous steps fail
      run: |
        cd db
        docker-compose down -v
